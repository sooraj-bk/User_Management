<link rel="stylesheet" href="/styles/adminLogin.css">

<div class="login-container">
    <h2>Admin Login</h2>
    <form action="/admin/login" method="POST" id="adminLoginForm" autocomplete="on">
        <input type="hidden" id="message" value="{{{message}}}" name="message">

        <label for="email">Email</label>
        <input type="email" id="email" name="email" autocomplete="email" required>

        <label for="password">Password</label>
        <div class="password-wrapper">
            <input type="password" id="password" name="password" autocomplete="current-password" minlength="5" required>
            <button type="button" id="togglePassword" aria-label="Toggle password visibility">üëÅÔ∏è</button>
        </div>

        <button type="submit" id="submitBtn">Log In</button>
    </form>
</div>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" defer></script>

<script defer>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('adminLoginForm');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const togglePassword = document.getElementById('togglePassword');
        const submitBtn = document.getElementById('submitBtn');
        const message = document.getElementById('message').value;

        // Show message from server if any
        if (message && message.trim() !== '') {
            Swal.fire({
                icon: 'info',
                title: 'Message',
                text: message,
                confirmButtonColor: '#3085d6'
            });
        }

        // Toggle password visibility
        togglePassword.addEventListener('click', () => {
            const type = passwordInput.type === 'password' ? 'text' : 'password';
            passwordInput.type = type;
            togglePassword.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üôà';
        });

        // Validation functions
        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }

        function isStrongPassword(password) {
            return password.length >= 5;
        }

        // On form submit
        form.addEventListener('submit', function (e) {
            const email = emailInput.value.trim();
            const password = passwordInput.value.trim();

            if (!email || !password) {
                e.preventDefault();
                Swal.fire({
                    icon: 'warning',
                    title: 'Missing Fields',
                    text: 'Both email and password are required.',
                    confirmButtonColor: '#f0ad4e'
                });
                return;
            }

            if (!isValidEmail(email)) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Email',
                    text: 'Please enter a valid email address.',
                    confirmButtonColor: '#d33'
                });
                return;
            }

            if (!isStrongPassword(password)) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Weak Password',
                    text: 'Password must be at least 5 characters.',
                    confirmButtonColor: '#d33'
                });
                return;
            }

            // Show loader while submitting
            submitBtn.disabled = true;
            submitBtn.textContent = 'Logging in...';
        });
    });
</script>
