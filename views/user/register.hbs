<link rel="stylesheet" href="/styles/userRegister.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="register-container">
    <h2>Create Account ‚ú®</h2>
    <p class="subtitle">Register to get started</p>

    <form method="post" action="/user/register" id="registerForm">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" placeholder="Enter your email" required>

        <label for="password">Password</label>
        <div class="password-wrapper">
            <input type="password" id="password" name="password" placeholder="Enter your password" required>
            <button type="button" class="togglePassword" data-target="password">üëÅÔ∏è</button>
        </div>

        <label for="confirmPassword">Confirm Password</label>
        <div class="password-wrapper">
            <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Re-enter password" required>
            <button type="button" class="togglePassword" data-target="confirmPassword">üëÅÔ∏è</button>
        </div>

        <input class="submit-btn" type="submit" value="Register">

        <input type="hidden" id="serverMessage" value="{{message}}">
    </form>
</div>
<script>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('registerForm');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const confirmInput = document.getElementById('confirmPassword');
    const serverMessage = document.getElementById('serverMessage')?.value;

   // Display message from server (if any)
if (serverMessage && serverMessage.trim() !== '') {
    const isSuccess = serverMessage.toLowerCase().includes('success');

    Swal.fire({
        icon: isSuccess ? 'success' : 'info',
        title: isSuccess ? '‚úîÔ∏è Registration Successful!' : 'Notice',
        text: serverMessage,
        confirmButtonColor: isSuccess ? '#28a745' : '#764ba2',
        timer: 3000
    });
}


    // Toggle password visibility
    document.querySelectorAll('.togglePassword').forEach(btn => {
        btn.addEventListener('click', () => {
            const input = document.getElementById(btn.dataset.target);
            const type = input.type === 'password' ? 'text' : 'password';
            input.type = type;
            btn.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üôà';
        });
    });

    // Client-side form validation
    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const email = emailInput.value.trim();
        const password = passwordInput.value.trim();
        const confirm = confirmInput.value.trim();

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

        if (!email || !password || !confirm) {
            return Swal.fire({
                icon: 'error',
                title: 'Missing Fields',
                text: 'Please fill in all fields.',
                confirmButtonColor: '#764ba2'
            });
        }

        if (!emailRegex.test(email)) {
            return Swal.fire({
                icon: 'error',
                title: 'Invalid Email',
                text: 'Please enter a valid email address.',
                confirmButtonColor: '#764ba2'
            });
        }

        if (password.length < 5) {
            return Swal.fire({
                icon: 'error',
                title: 'Weak Password',
                text: 'Password must be at least 5 characters long.',
                confirmButtonColor: '#764ba2'
            });
        }

        if (password !== confirm) {
            return Swal.fire({
                icon: 'error',
                title: 'Password Mismatch',
                text: 'The passwords do not match.',
                confirmButtonColor: '#764ba2'
            });
        }

        form.submit();
    });
});
</script>
